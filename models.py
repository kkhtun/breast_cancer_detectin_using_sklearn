# -*- coding: utf-8 -*-
"""models.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s6GeJ7jqOgL2TgawYIJIUzOuVdvYbf3F
"""

from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier

def model(X, Y):

  log_reg = LogisticRegression(random_state=0)
  log_reg.fit(X, Y)

  knn = KNeighborsClassifier(n_neighbors=5, metric="minkowski", p=2)
  knn.fit(X, Y)

  svc_lin = SVC(kernel="linear", random_state=0)
  svc_lin.fit(X, Y)

  svc_rbf = SVC(kernel="rbf", random_state=0)
  svc_rbf.fit(X, Y)

  gnb = GaussianNB()
  gnb.fit(X, Y)

  dec_tree = DecisionTreeClassifier(criterion="entropy", random_state=0)
  dec_tree.fit(X, Y)

  ran_forest = RandomForestClassifier(criterion="entropy", n_estimators=10, random_state=0)
  ran_forest.fit(X, Y)

  print("[0]Logistic Regression Training Accuracy :                 ", log_reg.score(X, Y))
  print("[1]K Neighbours Classifier Training Accuracy :             ", knn.score(X, Y))
  print("[2]Support Vector Classifier (Linear) Training Accuracy :  ", svc_lin.score(X, Y))
  print("[3]Support Vector Classifier (RBF) Training Accuracy :     ", svc_rbf.score(X, Y))
  print("[4]Gaussian Naive Bayes Training Accuracy :                ", gnb.score(X, Y))
  print("[5]Decision Tree Classifier Training Accuracy :            ", dec_tree.score(X, Y))
  print("[6]Random Forest Classifier Training Accuracy :            ", ran_forest.score(X, Y))

  return log_reg, knn, svc_lin, svc_rbf, gnb, dec_tree, ran_forest

